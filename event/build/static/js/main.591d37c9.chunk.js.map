{"version":3,"sources":["components/TOC.js","components/Article.js","components/Subject.js","App.js","reportWebVitals.js","index.js"],"names":["TOC","data","this","props","lists","i","length","push","data-id","id","onClick","e","preventDefault","alert","onChangePage","target","dataset","bind","href","title","Component","Article","desc","Subject","sub","App","state","mode","selected_content_id","subject","welcome","contents","_title","_desc","num","console","log","className","setState","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAyBkBA,E,4JAtBd,WAGE,IAFA,IAAIC,EAAOC,KAAKC,MAAMF,KAClBG,EAAQ,GACJC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC7BD,EAAMG,KACN,6BACG,mBAAGC,UAASP,EAAKI,GAAGI,GAAIC,QAAW,SAASC,GAC1CA,EAAEC,iBACFC,MAAM,SACNX,KAAKC,MAAMW,aAAaH,EAAEI,OAAOC,QAAQP,KACzCQ,KAAKf,MAAQgB,KAAM,YAAYjB,EAAKI,GAAGI,GAJzC,SAI8CR,EAAKI,GAAGc,SALhDlB,EAAKI,GAAGI,KAOpB,OACE,8BACE,6BACIL,U,GAhBIgB,aCYHC,E,4JAXX,WACE,OACE,oCACE,6BAAKnB,KAAKC,MAAMgB,QACfjB,KAAKC,MAAMmB,KACZ,4C,GANYF,aCcLG,E,4JAbb,WACE,OACE,mCACG,6BAAI,mBAAGL,KAAK,IAAIR,QAAW,SAASC,GAClCA,EAAEC,iBACFV,KAAKC,MAAMW,gBACXG,KAAKf,MAHH,SAGWA,KAAKC,MAAMgB,UACzBjB,KAAKC,MAAMqB,W,GARDJ,aCqGPK,E,kDAtEb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAQ,CACXC,KAAO,OACPC,oBAAsB,EACtBC,QAAU,CAACV,MAAM,MAAOK,IAAI,kBAC5BM,QAAU,CAACX,MAAM,SAAUG,KAAK,kBAChCS,SAAS,CACP,CAACtB,GAAG,EAAGU,MAAM,OAAQG,KAAK,eAC1B,CAACb,GAAG,EAAGU,MAAM,MAAOG,KAAK,aACzB,CAACb,GAAG,EAAGU,MAAM,aAAcG,KAAK,sBAVpB,E,0CAelB,WACE,IAAIU,EAAQC,EAAQ,KACpB,GAAuB,YAApB/B,KAAKwB,MAAMC,KACVK,EAAS9B,KAAKwB,MAAMI,QAAQX,MAC5Bc,EAAQ/B,KAAKwB,MAAMI,QAAQR,UACzB,GAAuB,SAApBpB,KAAKwB,MAAMC,KAAgB,CAShC,IAAIO,EAAOhC,KAAKwB,MAAME,oBAAoB,EACtC3B,EAAOC,KAAKwB,MAAMK,SAASG,GAC/BF,EAAS/B,EAAKkB,MACdc,EAAQhC,EAAKqB,KAGjB,OADEa,QAAQC,IAAI,YAAalC,MAEzB,sBAAKmC,UAAY,MAAjB,UAiBE,cAAC,EAAD,CAASlB,MAAOjB,KAAKwB,MAAMG,QAAQV,MAAOK,IAAMtB,KAAKwB,MAAMG,QAAQL,IAAKV,aAAgB,WACpFD,MAAM,MACNX,KAAKoC,SAAS,CACZX,KAAO,aAEXV,KAAKf,QACP,cAAC,EAAD,CAAKY,aAAgB,SAASL,GAC1BI,MAAMJ,EAAG,OACTP,KAAKoC,SAAS,CAACX,KAAK,OAAQC,oBAAoBW,OAAO9B,MAEzDQ,KAAKf,MAAOD,KAAMC,KAAKwB,MAAMK,WAC/B,cAAC,EAAD,CAASZ,MAAOa,EAAQV,KAAMW,W,GAjEpBb,aCpBHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.591d37c9.chunk.js","sourcesContent":["import React, {Component} from 'react';\n//여러가지 엘리먼트가 자동생성되면 오류가 난다. 그래서 key를 주면됨\nclass TOC extends Component {\n    render(){\n      var data = this.props.data;\n      var lists = [];\n      for(var i = 0; i < data.length; i++)\n         lists.push(\n         <li key={data[i].id}> \n            <a data-id={data[i].id} onClick = {function(e){\n              e.preventDefault();\n              alert(\"click\")\n              this.props.onChangePage(e.target.dataset.id);\n            }.bind(this)}  href={\"/content/\"+data[i].id}>{data[i].title}</a>\n         </li>);\n      return(\n        <nav>\n          <ul>\n             {lists}\n          </ul>\n        </nav>\n      );\n    }\n  }\n\n  export default  TOC; //toc를 선택해서 내보냄 ","import React, { Component } from \"react\";\n\nclass Article extends Component { \n    render(){\n      return(\n        <article>\n          <h2>{this.props.title}</h2>\n          {this.props.desc}\n          <h1>!!!</h1>\n        </article>\n      );\n    }\n  }\n\nexport default Article;","import React, {Component} from 'react';\n\nclass Subject extends Component {\n    render(){\n      return(\n        <header>\n           <h1><a href=\"/\" onClick = {function(e){\n             e.preventDefault();\n             this.props.onChangePage();\n           }.bind(this)}>{this.props.title}</a></h1>\n           {this.props.sub}\n        </header>\n      );\n    }\n  }\n\n  export default Subject;\n\n","import { render } from '@testing-library/react';\nimport React, {Component} from 'react';\nimport './App.css';\nimport TOC from './components/TOC' //toc는 컴포넌트에 toc에서 가져옴\nimport Article from './components/Article';\nimport Subject from './components/Subject';\n\n// class App extends Component{\n//   render(){\n//     return (\n//       <div className=\"App\">\n//         <header className=\"App-header\">\n//           <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//           <p>\n//             Edit <code>src/App.js</code> and save to reload.\n//           </p>\n//           <a\n//             className=\"App-link\"\n//             href=\"https://reactjs.org\"\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//           >\n//             Learn React\n//           </a>\n//         </header>\n//       </div>\n//     );\n//   }\n// }\n//하나의 최상위 태그만 써야한다.\n//subject가 this 우리가 원하는 걸 출력함\n\nclass App extends Component { // class 안에는 strict mode가 적용됨 그래서 this는 undefined가 바잉됨\n  constructor(props){\n    super(props);\n    this.state = {\n      mode : 'read',\n      selected_content_id : 2,\n      subject : {title:'web', sub:'world wid web!'},\n      welcome : {title:'Welcom', desc:'Hello, React!!'},\n      contents:[\n        {id:1, title:'html', desc:'hteml is...'},\n        {id:2, title:'css', desc:'css is...'},\n        {id:3, title:'javascript', desc:'javascript is...'}\n      ]\n    }\n  }// 가장 먼저 실행됨 초기화 담당\n  \n  render(){ //props 혹은 state가 변경되면 해당되는 component에 render가 변경된다.\n    var _title, _desc = null;\n    if(this.state.mode === 'welcome'){\n        _title = this.state.welcome.title;\n        _desc = this.state.welcome.desc;\n    }else if(this.state.mode === 'read'){\n        // for(var i = 0; i < this.state.contents.length;i++){\n        //   var data = this.state.contents[i];\n        //   if(data.id == this.state.selected_content_id){\n        //     _title = data.title\n        //     _desc = data.desc\n        //     break;\n        //   }\n        // }\n        var num = (this.state.selected_content_id-1);\n        var data = this.state.contents[num];\n        _title = data.title;\n        _desc = data.desc;\n      }\n      console.log('render:::', this);\n    return(\n      <div className = \"App\">\n        {/* <header>\n          <h1><a href=\"/\" onClick={function(e){\n            console.log('event:::', this);\n            e.preventDefault();\n            return;\n            console.log(e);\n            e.preventDefault(); //이벤트 동작 막음\n            //this.state.mode = 'welcome'; 작동 불가 리엑트는 소스가 변경되면 render를 하는데 \n            this.setState({\n              mode : 'welcome'\n            }) //bind를 안해주면 클릭한 것 window를 가리킨다.\n            // 그래서 바인드를 함 app안에 메소드 처럼 동작하기 위한 것\n\n          }.bind(this)}>{this.state.subject.title}</a></h1>\n          {this.state.subject.sub}\n        </header> */}\n        <Subject title={this.state.subject.title} sub ={this.state.subject.sub} onChangePage = {function(){\n            alert(\"hi\");\n            this.setState({\n              mode : 'welcome'\n            })\n        }.bind(this)}></Subject>\n        <TOC onChangePage = {function(id){\n            alert(id+\"toc\");\n            this.setState({mode:'read', selected_content_id:Number(id)});\n      \n        }.bind(this)} data={this.state.contents}></TOC>\n        <Article title={_title} desc={_desc}></Article>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // import 를 통해 ./으로 불러옴 <App>(사용자 정의 태그) 이기도 하다 \nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//root = container \n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}